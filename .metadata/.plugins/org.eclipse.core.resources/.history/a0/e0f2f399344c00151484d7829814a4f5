package com.engineer4myanmar.json;

import com.engineer4myanmar.json.Person;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import org.json.JSONException;
import org.json.JSONObject;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;

public class AdminActivity extends Activity {
	Person person = null;

	Spinner spCatalog;
	EditText etName;
	EditText etAddress;
	EditText etPhone;
	EditText etUrl;
	EditText etRating;
	EditText etLat;
	EditText etLng;
	EditText etP1;
	EditText etP2;
	EditText etCui;

	String input_catalog = "";
	String input_name= "";
	String input_address = "";
	String input_phone = "";
	String input_url = "";
	String input_rating = "";
	String input_lat = "";
	String input_lng = "";
	String input_p1 = "";
	String input_p2 = "";
	String input_cui = "";

	JSONObject jObj;
	JSONParser jsonParser = new JSONParser();

	// change here your ip/folder/php
	private static String url_register = "http://192.168.1.100/esdb/add2.php";

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register);
		spCatalog = (Spinner)findViewById(R.id.spCatalog);
		etName = (EditText) findViewById(R.id.etName);
		etAddress = (EditText) findViewById(R.id.etAddress);
		etPhone= (EditText) findViewById(R.id.etPhone);
		etUrl = (EditText) findViewById(R.id.etUrl);
		etRating = (EditText) findViewById(R.id.etRating);
		etLat = (EditText) findViewById(R.id.etLat);
		etLng= (EditText) findViewById(R.id.etLng);
		etP1 = (EditText) findViewById(R.id.etP1);
		etP2 = (EditText) findViewById(R.id.etP2);
		etCui = (EditText) findViewById(R.id.etCui);

	}

	private class HttpAsyncTask extends AsyncTask<String, String, String> {
		JSONObject json = null;

		@Override
		protected String doInBackground(String... urls) {

			InputStream is = null;
			List<NameValuePair> params = new ArrayList<NameValuePair>();

			
			input_catalog=spCatalog ;
			etName .getText().toString();
			etAddress .getText().toString();
			etPhone.getText().toString();
			etUrl .getText().toString();
			etRating.getText().toString();
			etLat .getText().toString();
			etLng.getText().toString();
			etP1 .getText().toString();
			etP2 .getText().toString();
			etCui .getText().toString();
			
			
			

			if (input_username.equals("") || input_password.equals("")) {				
				return null;
			} else {
				params.add(new BasicNameValuePair("user_name", input_username));
				params.add(new BasicNameValuePair("user_email", input_email));
				params.add(new BasicNameValuePair("user_password",
						input_password));
				params.add(new BasicNameValuePair("user_phoneno", input_phoneno));
				params.add(new BasicNameValuePair("user_dob", input_dob));
				params.add(new BasicNameValuePair("user_profession",
						input_profession));
				params.add(new BasicNameValuePair("user_city", input_city));

				// getting JSON Object
				try {
					// json = jsonParser.makeHttpRequest(url_register,
					// "POST",params);

					DefaultHttpClient httpClient = new DefaultHttpClient();
					HttpPost httpPost = new HttpPost(url_register);
					httpPost.setEntity(new UrlEncodedFormEntity(params));
					HttpResponse httpResponse = httpClient.execute(httpPost);
					HttpEntity httpEntity = httpResponse.getEntity();
					is = httpEntity.getContent();
					Log.d("JSON", is.toString());
					BufferedReader reader = new BufferedReader(
							new InputStreamReader(is, "iso-8859-1"), 8);
					StringBuilder sb = new StringBuilder();
					String line = null;

					while ((line = reader.readLine()) != null) {
						sb.append(line + "\n");
					}
					Log.d("JSON", sb.toString());
					is.close();
					String sjson = sb.toString();

					try {
						jObj = new JSONObject(sjson);
						json = jObj;
					} catch (JSONException e) {
						Log.e("JSON Parser",
								"Error parsing data " + e.toString() + "   "
										+ params.toString() + "+++ " + sjson);
					}

				} catch (Exception e) {
					Log.e("parser error", e.toString());
				}
				Log.d("Create Response", json.toString());

				// check for success tag
				try {
					int success = json.getInt("success");
					if (success == 1) {
						Log.d("Success", "OK");
					} else {
						Log.d("Success", "not OK");
					}
				} catch (Exception e) {
					Log.d("Success", "not OK " + e.toString());
				}

				// return neull;
				return jObj.toString();
				// return POST(urls[0],person);
			}
		}

		// onPostExecute displays the results of the AsyncTask.
		@Override
		protected void onPostExecute(String result) {
		
			try{
				if(result.equals(null))
				{
					Toast.makeText(getBaseContext(), "'"+ result+"'",Toast.LENGTH_LONG).show();
				}
				else
				{
					Toast.makeText(getBaseContext(), "Data successfully send to server!!!",Toast.LENGTH_LONG).show();
				}
					
			}catch(Exception e)
			{
				Log.e("JSON",e.toString());
				Toast.makeText(getBaseContext(), "Data cannot be send! Please fill the required fields !!!",Toast.LENGTH_LONG).show();
			}
			
			
			
			
			
		}
	}

	private boolean validate() {
		if (etUsername.getText().toString().trim().equals(""))
			return false;
		else if (etPassword.getText().toString().trim().equals(""))
			return false;
		else
			return true;
	}

	private static String convertInputStreamToString(InputStream inputStream)
			throws IOException {
		BufferedReader bufferedReader = new BufferedReader(
				new InputStreamReader(inputStream));
		String line = "";
		String result = "";
		while ((line = bufferedReader.readLine()) != null)
			result += line;

		inputStream.close();
		return result;

	}

	public void funRegister(View v) {
		// new registerJSONdbTask().execute(url_register);
		new HttpAsyncTask().execute(url_register);
	}
}
